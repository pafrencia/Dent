@page "/Pacientes"

@using Dent.Models
@using Dent.Shared
@using Dent.Pages
@inject Permisos Permiso

<button class="btn btn-success" @onclick="() => AgregarPacientesMenu(1)">@nombreDelBotonPacientes</button>
<p> </p>
<div
<div style="display: @(currentDivPacientes == 1 ? "block" : "none")">

<div class="form-group">
    <label style="width: 100%;" for="inputText">Nombre:</label>
    <input style="width: 100%;" type="text" id="inputText" @bind="nombrePaciente" />
</div>
<div class="form-group">
    <label style="width: 100%;" for="inputText">Apellido:</label>
    <input style="width: 100%;" type="text" id="inputText" @bind="apellido" />
</div>
<div class="form-group">
    <label style="width: 100%;" for="inputText">Domicilio:</label>
    <input style="width: 100%;" type="text" id="inputText" @bind="domicilio" />
</div>
<div class="form-group">
    <label style="width: 100%;" for="inputText">Celular:</label>
    <input style="width: 100%;" type="text" id="inputText" @bind="celu" />
</div>
    <br />
<div class="form-group">
    <label style="width: 100%;" for="fechaNacimiento">Fecha de Nacimiento:</label>
    <input style="width: 100%;" type="date" id="fechaNacimiento" @bind="fechaNacimiento" class="form-control" />
</div>
<div

<labe style="width: 100%;"l for="miString">EDAD:</labe>
<input style="width: 100%;" id="miString" @bind="edad" />
<button class="btn btn-info" @onclick="CalcularEdad">CALCULAR </button>
</div>
    <br />
<div class="form-group">
    <label style="width: 100%;" for="ObrasSocialesList">Selecciona una Obra Social:</label>
    <select style="width: 100%;" id="ObrasSocialesList" @onchange="MetodoPersonalizado" class="form-control">
        <option value="0">Selecciona...</option>
        <option value="PARTICULAR">PARTICULAR</option>
        <option value="AVALIAN">AVALIAN</option>
        <option value="AMERICA_SERVICIOS">AMERICA SERVICIOS</option>
        <option value="CAJA_NOTARIAL">CAJA NOTARIAL</option>
        <option value="FEDERADA">FEDERADA</option
        <option value="GALENO">GALENO</option>
        <option value="IOSPA">IOSPA</option>
        <option value="JERARQUICOS">JERARQUICOS</option>
        <option value="MEDIFE">MEDIFE</option>
        <option value="OMINT">OMINT</option>
        <option value="OSSEJ">OSSEJ</option>
        <option value="PREVENCION">PREVENCION</option>
        <option value="SANCOR">SANCOR</option>
        <option value="SWISS_MEDICAL">SWISS MEDICAL</option>
        <option value="UNIMED">UNIMED</option>
    </select>
</div>

    <br />
<!-- Divs -->
<div style="display: @(currentDiv == 1 ? "block" : "none")">
<!-- DATOS PARA OBJETO DE BASE DE DATOS AFILIADO -->
<div class="form-group">
    <label style="width: 100%;" for="inputText">Nº Afiliado:</label>
    <input style="width: 100%;" type="text" id="inputText" @bind="afiliado" />
</div>
<div class="form-group">
    <label style="width: 100%;" for="inputText">Plan:</label>
    <input style="width: 100%;" type="text" id="inputText" @bind="plan" />
</div>
<div class="form-group">
    <label style="width: 100%;" for="inputText">PARENTESCO:</label>
    <input style="width: 100%;" type="text" id="inputText" @bind="titular" />
</div>
</div>
    <br />
<div  style="width: 100%;">
 <textarea rows="4" cols= style="width: 100%;" @bind="textoMultilinea"></textarea>
</div>

<button style="width: 100%;" class="btn btn-success" disabled="@(!CamposValidos)" @onclick="Agregar">Agregar </button>

</div>
</div>

    <br />
    <h3>Pacientes</h3>
    
    <table class="table">
        <thead>
        <tr class="table-dark">
                <th>NOMBRE</th>
                <th>DOMICILIO</th>
                <th>CELULAR</th>
                <th>FECHA DE NACIMIENTO</th>
                <th>FECHA DE ALTA</th>
                <th>OBRA SOCIAL</th>
                </tr>
        </thead>
        <tbody>
            @foreach (var datos in ListaDePacientes)
            {
            <tr class="table-success">
                    <td>@datos.Nombre</td>
                    <td>@datos.Apellido</td>
                    <td>@datos.Domicilio</td>
                    <td>@datos.Celular</td>
                    <td>@datos.FechaDeNacimiento</td>
                    <td>@datos.FechaDeAlta</td>
                <td>@datos.ObraSocial</td>
                <td>
                    <button class="btn btn-danger" @onclick="() => EliminarPractica(datos.Id)">X</button>
                </td>
                </tr>
            }
        </tbody>
    </table>
    

@code {
    private bool CamposValidos => !string.IsNullOrEmpty(apellido) && !string.IsNullOrEmpty(nombrePaciente);
    private bool mostrarModalEdit = false;
    private List<Paciente> ListaDePacientes = new List<Paciente>();

    private int currentDiv = 0;
    public int edad = 0;
    public int currentDivPacientes = 0;
    public string pacienteAgregadoCorrectamente = "";



    private void ShowDiv(int divNumber)
    {
        // Cambiar el número del div actual al hacer clic en el botón correspondiente
        currentDiv = divNumber;
    }
    [Inject]
    private DbDentistaContext DbContext { get; set; }

    protected override void OnInitialized()
    {
        ListaDePacientes = DbContext.Pacientes.ToList();
    }
    public string nombreDelBotonPacientes = "AGREGAR PACIENTE";
    public string nombrePaciente = "-";
    public string apellido = "-";
    public string domicilio = "-";
    public string celu = "0";
    private DateTime fechaNacimiento = DateTime.Today;
    private DateTime fechaAlta = DateTime.Today;
    private string obraSocialSeleccionada;
    public string obraSocialGuardar = "ninguna";
    public string titular = "TITULAR";
    public string plan = "-";
    public string afiliado = "0";
    private string textoMultilinea = "observacioes del paciente, aca como ejemplo escribire cualquiier cosa para ver que la base de datos tome bien todo el contenido de la caja de texto se ve que puede tenre bastante, recordemos que es u campo de observacion, tampoco la gilada de escribir un libro, si no para eso directamente vas al rawson y sacas un turno con anticipacion para no tener demoras cuando veas que estas escribiendo m,ucho en este campo, directamente vas al turno que ya sacaste";

    public void EliminarPractica(int pacienteId)
    {
        //  Eliminarla.Eliminarla(practicaId);
        var practica = DbContext.Pacientes.Find(pacienteId);

        using (DbDentistaContext db = new DbDentistaContext())
        {
            db.Pacientes.Remove(practica);
            db.SaveChanges();
        }
        ActualizaTabla();
    }




    private void ActualizaTabla()
    {
        ListaDePacientes = DbContext.Pacientes.ToList();
        StateHasChanged();

    }

    private void AgregarPacientesMenu(int log)
    {        if (currentDivPacientes == 0)
        {
            currentDivPacientes = log;
            nombreDelBotonPacientes = "CERRAR PESTAÑA";
        }
        else
        {
            currentDivPacientes = 0;
            nombreDelBotonPacientes = "AGREGAR PACIENTES";
        }
        InicializarPacientes();

    }
    private void CalcularEdad()
    {

        DateTime fechaActual = DateTime.Today;
        edad = fechaActual.Year - fechaNacimiento.Year;

        // Verifica si aún no ha cumplido años en el año actual
        if (fechaActual.Month < fechaNacimiento.Month || (fechaActual.Month == fechaNacimiento.Month && fechaActual.Day < fechaNacimiento.Day))
        {
            edad--;
        }    
    }

    private void MetodoPersonalizado(ChangeEventArgs args)
    {
        obraSocialSeleccionada = args.Value.ToString();
        // Lógica del método personalizado
        if (obraSocialSeleccionada == "particular")
        {
            obraSocialGuardar = "particular";
            ShowDiv(0);
            titular = "TITULAR";
            plan = "-";
            afiliado = "0";
        }
        else if (obraSocialSeleccionada == "0")
        {
            obraSocialGuardar = obraSocialSeleccionada;
            ShowDiv(0);
        }
        else
        {
            obraSocialGuardar = obraSocialSeleccionada;
            ShowDiv(1);
        }        
    }
    public void InicializarPacientes()
    {
        nombrePaciente = "-";
        apellido = "-";
        domicilio = "-";
        celu = "0";
        fechaNacimiento = DateTime.Today;
        fechaAlta = DateTime.Today;
        obraSocialSeleccionada = "0";
        obraSocialGuardar = "ninguna";
        titular = "TITULAR";
        plan = "-";
        afiliado = "0";
    }

    public void Agregar()
    {
        var prueba = new Paciente();

        prueba.Nombre = nombrePaciente.ToUpper();
        prueba.Apellido = apellido.ToUpper();
        prueba.Domicilio = domicilio.ToUpper();
        prueba.Celular = celu;
        prueba.FechaDeNacimiento = fechaNacimiento;
        prueba.FechaDeAlta = DateTime.Today;
        prueba.ObraSocial = obraSocialGuardar;
        prueba.Titular = titular.ToUpper();
        prueba.PlanDeObraSocial = plan;
        prueba.NumeroAfiliado = afiliado;
        prueba.Observaciones = textoMultilinea;


        using (DbDentistaContext db = new DbDentistaContext())
        {
            db.Pacientes.Add(prueba);
            db.SaveChanges();
        }
        pacienteAgregadoCorrectamente = "paciente agregado correctamente";
        ActualizaTablaPacientes();
        InicializarPacientes();
        AgregarPacientesMenu(1);
    }
       private void ActualizaTablaPacientes()
    {    
        ListaDePacientes = DbContext.Pacientes.ToList();
        StateHasChanged();

    }


}