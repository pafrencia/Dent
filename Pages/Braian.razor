@page "/Braian"
@using Dent.Models
@inject Permisos Permiso
@inject AgregarPracticas AgregarPracticas
@inject EliminarPracticaMetod EliminarPracticaMethod

<div class="form-group">
    <label style="width: 100%;" >PACIENTE:</label>
    <select style="width: 100%;" @bind="IdPacienteAtendido">
        <option value="">Seleccionar</option>
        @foreach (var paciente in listaDePacientes)
        {
            <option value="@paciente.Id">@($"{paciente.Apellido} {paciente.Nombre}")</option>
        }
    </select>
    <p> </p>
    <label style="width: 100%;">PRACTICA:</label>
    <select style="width: 100%;" @bind="PracticaSeleccionada">
        <option value="">Seleccionar</option>
        @foreach (var practicaseleccion in ListaDePracticas)
        {
            <option value="@practicaseleccion.Practica">@practicaseleccion.Practica</option>
        }
    </select>

    <button style="width: 100%;" class="btn btn-success" disabled="@(!CamposValidos)" @onclick="Agregar">Agregar </button>
    </div>

<!-- Divs -->
<div style="display: @(currentDiv == 1 ? "block" : "none")">
    <br />
    <table class="table">
        <thead>
            <tr class="table-dark">
                <th>FECHA</th>
                <th>PACIENTE</th>
                <th>PRACTICA</th>
                <th>OBRA SOCIAL</th>
                <th>PRECIO</th>
                <th>ODONTOLOGO</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var practicaRealizada in ListaDePracticasRealizadas)
            {
                <tr class="table-success">
                    <td>@practicaRealizada.Fecha</td>
                    <td>@practicaRealizada.Paciente</td>
                    <td>@practicaRealizada.Practica</td>
                    <td>@practicaRealizada.ObraSocial</td>
                    <td>@practicaRealizada.Precio</td>
                    <td>@practicaRealizada.Odontologo</td>
                    <td>
                    <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#modaledit">EDITAR</button>
                    <button class="btn btn-danger" @onclick="() => EliminarPractica(practicaRealizada.Id)">X</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal" style="display: @(mostrarModalEdit ? "block" : "none")">
    <div class="modal-content">
        <span class="btn btn-danger" @onclick="CerrarModalEdit">CERRAR</span>
        <h3>EDITAR</h3>
        <div class="form-group">
            <label style="width: 100%;">PACIENTE:</label>
            <select style="width: 100%;" @bind="IdPacienteAtendido">
                <option value="">Seleccionar</option>
                @foreach (var paciente in listaDePacientes)
                {
                    <option value="@paciente.Id">@($"{paciente.Apellido} {paciente.Nombre}")</option>
                }
            </select>
            <p> </p>
            <label style="width: 100%;">PRACTICA:</label>
            <select style="width: 100%;" @bind="PracticaSeleccionada">
                <option value="">Seleccionar</option>
                @foreach (var practicaseleccion in ListaDePracticas)
                {
                    <option value="@practicaseleccion.Practica">@practicaseleccion.Practica</option>
                }
            </select>
            <button style="width: 100%;" class="btn btn-warning" disabled="@(!CamposValidos)" @onclick="() => EditarPractica(IdEditar)">EDITAR</button>
        </div>
     </div>
</div>


<div class="modal fade" id="modaledit" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">EDITAR PRACTICA</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="inputText">Practica:</label>
                    <input style="width: 100%;" type="text" id="inputText" @bind="Practica" />
                </div>
                <div class="form-group">
                    <label for="inputText">Precio:</label>
                    <input style="width: 100%;" type="text" id="inputText" @bind="Precio" />
                </div>
            </div>
            <div class="modal-footer">
                <button style="width: 100%;" class="btn btn-warning" data-bs-dismiss="modal" disabled="@(!CamposValidos)" @onclick="() => EditarPractica(IdEdit)">Editar</button>
                <button style="width: 100%;" class="btn btn-danger" data-bs-dismiss="modal">X</button>
            </div>
        </div>
    </div>
</div>



@code {

    private bool CamposValidos => IdPacienteAtendido != 0 && !string.IsNullOrEmpty(PracticaSeleccionada);


    private int IdEdit = 0;
    private bool mostrarModalEdit = false;
    private List<PracticasRealizada> ListaDePracticasRealizadas = new List<PracticasRealizada>();
    private List<Paciente> listaDePacientes = new List<Paciente>();
    private List<Practica1> ListaDePracticas = new List<Practica1>();
    private int currentDiv = 1;
    private int IdPacienteAtendido;
    private int IdPacienteEditar;
    private string ObraSocialPacienteAtendido = "no cargada";
    private string PracticaSeleccionada;
    private void ShowDiv(int divNumber)
    {
        // Cambiar el número del div actual al hacer clic en el botón correspondiente
        currentDiv = divNumber;
    }
    [Inject]
    private DbDentistaContext DbContext { get; set; }

    protected override void OnInitialized()
    {
        ListaDePracticasRealizadas = DbContext.PracticasRealizadas.ToList();
        listaDePacientes = DbContext.Pacientes.ToList();
        ListaDePracticas = DbContext.Practicas.ToList();

    }
    public string Practica = "";
    public string PacienteAtendido = "";
    public int Precio = 0;
    public int IdEditar = 0;
    public string miString = "";

    [Inject]
    private AgregarPracticas agregarPracticas { get; set; }
    [Inject]
    private EliminarPracticaMetod Eliminarla { get; set; }
    private void EditarPracticaAbrir(int practicaId)
    {
        AbrirModalEdit();


        if (currentDiv == 1)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                var practica = DbContext.PracticasRealizadas.Find(practicaId);
                PracticaSeleccionada = practica.Practica;
                PacienteAtendido = practica.Practica;
                IdPacienteEditar = practica.IdPaciente;
            }
            using (DbDentistaContext db = new DbDentistaContext())
            {
                var paciente = DbContext.Pacientes.Find(IdPacienteEditar);
                IdPacienteAtendido = paciente.Id;
            }
        }
    }


    private List<Paciente> listaDeItems;
    private Paciente selectedItem;

    protected override async Task OnInitializedAsync()
    {

        listaDeItems = DbContext.Pacientes.ToList();

    }

    public void EditarPractica(int practicaId)
    {
        using (DbDentistaContext db = new DbDentistaContext())
        {
            var practica = DbContext.PracticasRealizadas.Find(practicaId);
            practica.Paciente = PacienteAtendido;
            practica.Practica = Practica;
            db.SaveChanges();
            ActualizaTabla();
        }
        CerrarModalEdit();

    }
    public void EliminarPractica(int practicaId)
    {
        //  Eliminarla.Eliminarla(practicaId);
        var practica = DbContext.PracticasRealizadas.Find(practicaId);
        if (practica != null)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                db.PracticasRealizadas.Remove(practica);
                db.SaveChanges();
            }
        }
        ActualizaTabla();

    }
    private void Agregar()
    {
        using (DbDentistaContext db = new DbDentistaContext())
        {
            var paciente = DbContext.Pacientes.Find(IdPacienteAtendido);
            PacienteAtendido = paciente.Nombre + paciente.Apellido;
            ObraSocialPacienteAtendido = paciente.ObraSocial;
            IdPacienteEditar = paciente.Id;
        }

        var prueba = new PracticasRealizada();

        prueba.Paciente = PacienteAtendido;
        prueba.Practica = PracticaSeleccionada;
        prueba.ObraSocial = "pendiente";
        prueba.Precio = Precio;
        prueba.ObraSocial = ObraSocialPacienteAtendido;
        prueba.Odontologo = "BRAIAN";
        prueba.Fecha = DateTime.Now;
        prueba.IdPaciente = IdPacienteEditar;


        using (DbDentistaContext db = new DbDentistaContext())
        {
            db.PracticasRealizadas.Add(prueba);
            db.SaveChanges();
        }         
        ActualizaTabla();
    }

    private void ActualizaTabla()
    {
        ListaDePracticasRealizadas = DbContext.PracticasRealizadas.ToList();
        StateHasChanged();

    }

    public void AbrirModalEdit()
    {
        mostrarModalEdit = true;
    }

    // Método para cerrar el modal
    public void CerrarModalEdit()
    {
        mostrarModalEdit = false;
    }
}