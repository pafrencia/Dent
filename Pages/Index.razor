@page "/"
@using Dent.Models
@inject ServicioAutenticacion ServicioAutenticacion
@inject NavigationManager NavigationManager

<PageTitle>Index</PageTitle>

<h1>BIENVENIDOS A DENT</h1>

<h3>Iniciar Sesión</h3>

<EditForm Model="@usuario" OnValidSubmit="IniciarSesion">
    <DataAnnotationsValidator />
    <div>
        <label for="nombreUsuario">Nombre de Usuario:</label>
        <InputText id="nombreUsuario" @bind-Value="nombreUsuario" />
    </div>
    <div>
        <label for="contraseña">Contraseña:</label>
        <InputText id="contraseña" type="password" @bind-Value="contraseña" />
    </div>
    <button @onclick="IniciarSesion">Iniciar Sesion</button>
    <label>@info</label>
</EditForm>

<button @onclick="AbrirModal">Crear Usuario</button>


<div class="modal" style="display: @(mostrarModal ? "block" : "none")">
    <div class="modal-content">
        <span class="cerrar" @onclick="CerrarModal">&times;</span>
        <h3>Iniciar Sesión</h3>

        <div>
            <label for="nombreUsuario">Nombre de Usuario:</label>
            <input id="nombreUsuario" @bind="nombreUsuario" />
        </div>

        <div>
            <label for="contraseña">Contraseña:</label>
            <input type="password" id="contraseña" @bind="contraseña" />
        </div>

        <button @onclick="CrearUsuario">Crear Usuario</button>
    </div>
</div>

@code {
    [Inject]
    private DbDentistaContext DbContext { get; set; }
    string info = "Ingrese Usuario y contraseña";
    private bool mostrarModal = false;
    private string nombreUsuario = "";
    private string contraseña = "";

    private Usuario usuario = new Usuario();

 

    public void CrearUsuario()
    {
        var comparacion = contraseña.Length;
        if (comparacion == 10)
        { 
            var datos = new Login();
            datos.Usuario = nombreUsuario;
            datos.Contraseña = contraseña;
            using (DbDentistaContext db = new DbDentistaContext())
            {
                db.Logins.Add(datos);
                db.SaveChanges();
            }
            info = "El Usuario se creo correctamente, ya puede ingresar";
        }
        else
        {
            info = "LA CONTRASEÑA DEBE TENER 10 CARACTERES";
        }
        CerrarModal();

    }


    private async Task IniciarSesion()
    {


        var entidad = new Login();

        entidad = DbContext.Logins.SingleOrDefault(e => e.Usuario == nombreUsuario);


        if (entidad != null)
        {
           
            if (entidad.Contraseña == contraseña)

            { info = "USUARIO Y CONTRASEÑA CORRECTA"; }
        else
            { info = "CONTRASEÑA INCORRECTA"; }
        }
        else
        {
            info = "EL USUARIO NO EXISTE";

        }
           
    }

    //    if (ServicioAutenticacion.ValidarCredenciales(nombreUsuario, contraseña))
  //      {

   //       
    //        NavigationManager.NavigateTo("/Practicas");
    //    }
    //    else
    //    {
            // Mostrar mensaje de error o realizar otras acciones en caso de credenciales incorrectas
    //        info = "Usuario/contraseña INCORRECTA";
    //    }
    
    // Método que se ejecutará cuando se haga clic en el botón
    //
   // Welcome to your new app.
   //<SurveyPrompt Title = "How is Blazor working for you?" />4


    // Método para abrir el modal
    public void AbrirModal()
    {
        mostrarModal = true;
    }

    // Método para cerrar el modal
    public void CerrarModal()
    {
        mostrarModal = false;
    }

}
