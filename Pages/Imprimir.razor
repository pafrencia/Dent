@page "/Imprimir"
@using Dent.Models
@using Dent.Shared
@inject Permisos Permiso
<PageTitle>IMPRIMIR</PageTitle>
@if (Permiso.Logueado == 1)

{
    <style>
    .small {
            width: 25px;
            height: 25px;
        background - color: white;
    color: lightgray;
    border: none;
            padding: 0;
            margin: 0;
            font-size: 20px;
    }
    </style>
    <style>
    .input - small {
    width: 100px;
            height: 100px;
    }
    </style>
     <style>
        /* Estilos CSS para el cuadro */
        .image-container {
            width: 700px; /* Ancho deseado */
            height: 100px; /* Altura deseada */
            overflow: hidden; /* Ocultar el contenido que se desborda */
        }
            /* Estilos CSS para la imagen */
            .image-container img {
                width: 100%; /* Ancho al 100% del cuadro */
                height: auto; /* Altura automática para mantener la proporción */
                display: block; /* Hacer que la imagen sea un bloque */
            }
    </style>
    <button class="btn btn-primary" @onclick="() => OcultarTodo()">@nombreDelBoton</button>
    <div style="display: @(OcultarImagen == 1 ? "block" : "none")">
    <div class="image-container">
            <img src="https://i.gyazo.com/4195baa2e73bef549cfb923918ee9b17.png" alt="Descripción de la imagen">
    </div>
    </div>
    <div style="display: @(OcultarTodoValor == 1 ? "block" : "none")">

        <div class="form-group">
            <label for="inputText">% en 3 Cuotas:</label>
            <input type="text" id="inputText" @bind="TresCuotasPorcentaje" />
        </div>
        <div class="form-group">
            <label for="inputText">% en 6 Cuotas:</label>
            <input type="text" id="inputText" @bind="SeisCuotasPorcentaje" />
        </div>
    </div>
    <p> </p>
    <input type="text" id="inputText" class="input-small" @bind="Titulos[0]" size="36" readonly />
        <input type="text" id="inputText" @bind="Titulos[1]" size="6" readonly />
        <input type="text" id="inputText" @bind="Titulos[2]" size="6" readonly />
        <input type="text" id="inputText" @bind="Titulos[3]" size="6" readonly />
        <input type="text" id="inputText" @bind="Titulos[4]" size="6" readonly />
    <br />
    <input type="text" id="inputText" class="input-small" @bind="PracticasArreglo[0]" size="36" readonly />
        <input type="text" id="inputText" value="@($"$ {PrecioArreglo[0]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {EfectivoArreglo[0]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {TresCuotasArreglo[0]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {SeisCuotasArreglo[0]}")" size="6" readonly />
    <button class="small " @onclick="() => EliminarFIla1(1)">X</button>
        <br />
    <input type="text" id="inputText" class="input-small" @bind="PracticasArreglo[1]" size="36" readonly />
    <input type="text" id="inputText" value="@($"$ {PrecioArreglo[1]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {EfectivoArreglo[1]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {TresCuotasArreglo[1]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {SeisCuotasArreglo[1]}")" size="6" readonly />
    <button class="small " @onclick="() => EliminarFIla1(2)">X</button>
        <br />
    <input type="text" id="inputText" class="input-small" @bind="PracticasArreglo[2]" size="36" readonly />
    <input type="text" id="inputText" value="@($"$ {PrecioArreglo[2]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {EfectivoArreglo[2]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {TresCuotasArreglo[2]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {SeisCuotasArreglo[2]}")" size="6" readonly />
    <button class="small " @onclick="() => EliminarFIla1(3)">X</button>
        <br />
    <input type="text" id="inputText" class="input-small" @bind="PracticasArreglo[3]" size="36" readonly />
    <input type="text" id="inputText" value="@($"$ {PrecioArreglo[3]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {EfectivoArreglo[3]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {TresCuotasArreglo[3]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {SeisCuotasArreglo[3]}")" size="6" readonly />
    <button class="small " @onclick="() => EliminarFIla1(4)">X</button>
        <br />
    <input type="text" id="inputText" class="input-small" @bind="PracticasArreglo[4]" size="36" readonly />
    <input type="text" id="inputText" value="@($"$ {PrecioArreglo[4]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {EfectivoArreglo[4]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {TresCuotasArreglo[4]}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {SeisCuotasArreglo[4]}")" size="6" readonly />
    <button class="small " @onclick="() => EliminarFIla1(5)">X</button>
        <br />
    <input type="text" id="inputText" class="input-small" @bind="TotalLabel" size="36" readonly />
    <input type="text" id="inputText" value="@($"$ {TotalDebito}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {TotalEfectivo}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {Total3Cuotas}")" size="6" readonly />
    <input type="text" id="inputText" value="@($"$ {Total6Cuotas}")" size="6" readonly />
        <br />
        <div style="width: 50%;">
            <textarea rows="4" cols="100" @bind="textoMultilinea"></textarea>
    </div>






    <div style="display: @(OcultarTodoValor == 1 ? "block" : "none")">
        <!-- BOTONES POR SI SE NECESITA USAR PRECIOS DIFERENCIADOS POR OBRAS SOCIALES
        <button class="boton-celeste" @onclick="() => ShowDiv(1)">PARTICULAR</button>
        <button class="boton-celeste" @onclick="() => ShowDiv(2)">APROSS</button>
        <button class="boton-celeste" @onclick="() => ShowDiv(3)">OUM</button>
        <button class="boton-celeste" @onclick="() => ShowDiv(4)">OSDE</button>
        <button class="boton-celeste" @onclick="() => ShowDiv(5)">OTRAS</button>
        -->


        <div style="display: @(currentDiv == 1 ? "block" : "none")">
            <table class="table">
                <thead>
                    <tr class="table-dark">
                        <th>ID</th>
                        <th>Practica</th>
                        <th>Precio</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var practica in ListaDePracticas)
                    {
                        <tr class="table-success">
                            <td>@practica.Id</td>
                            <td>@practica.Practica</td>
                            <td>@practica.Precio</td>
                            <td>
                                <button class="btn btn-success" @onclick="() => Agregar(practica.Id)">Agregar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div style="display: @(currentDiv == 2 ? "block" : "none")">
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Practica</th>
                        <th>Precio</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var practica in ListaDePracticasApross)
                    {
                        <tr>
                            <td>@practica.Id</td>
                            <td>@practica.Practica</td>
                            <td>@practica.Precio</td>
                            <td>
                                <button class="boton-celeste" @onclick="() => Agregar(practica.Id)">Agregar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <script>
            var hola = "";


            var adios = hola;

        </script>
    </div>
}
else
{
    <p>No tienes permiso para ver los datos.</p>
}


@code {

    // VARIABLES DE LA ULTIMA LINEA DE LA TABLA HARCODEADA//
    public string TotalLabel = "TOTAL:";
    private int currentDiv = 1;
    public int TotalDebito = 0;
    public int TotalEfectivo = 0;
    public int Total3Cuotas = 0;
    public int Total6Cuotas = 0;
    /////////////////////////////////////////////////////////
    public int TresCuotasPorcentaje = 30;
    public int SeisCuotasPorcentaje = 60;
    string[] Titulos = { "PRACTICA", "DEBITO", "EFECTIVO", "3 CUOTAS", "6 CUOTAS" };
    string[] PracticasArreglo = { "-", "-", "-", "-", "-" };
    int[] TresCuotasArreglo = { 0, 0, 0, 0, 0 }; 
    int[] SeisCuotasArreglo = { 0, 0, 0, 0, 0 };
    int[] PrecioArreglo = { 0, 0, 0, 0, 0 };
    int[] EfectivoArreglo = { 0, 0, 0, 0, 0 };
    public int TresCuotas = 0;
    public int SeisCuotas = 0;
    public int Efectivo20Menos = 0;
    public int OcultarTodoValor = 1;
    public int OcultarImagen = 0;
    string nombreDelBoton = "IMPRIMIR";
    private List<Practica1> ListaDePracticas = new List<Practica1>();
    private List<PracticasApro> ListaDePracticasApross = new List<PracticasApro>();
    private string textoMultilinea = "Aqui va la explicacion de precios y alguna observacion que quieras aplicar\n puede a ver saltos de linea no pasa nada\n tantos entres";
    

    public void OcultarTodo()
    {
        if (OcultarTodoValor  == 1)
        {

            OcultarImagen = 1;
            OcultarTodoValor = 0;
            nombreDelBoton = "PRESUPUESTO VALIDO POR 48hs, Posteriormente SUJETO A MODIFICACIONES";
        }
        else
        {
            OcultarTodoValor = 1;
            OcultarImagen = 0;
            nombreDelBoton = "IMPRIMIR";
        }

    }
    private void InicializarVariables()
    {

        PracticasArreglo[0] = "-";
        PracticasArreglo[1] = "-";
        PracticasArreglo[2] = "-";
        PracticasArreglo[3] = "-";
        PracticasArreglo[4] = "-";
        TresCuotasArreglo[0] = 0;
        TresCuotasArreglo[1] = 0;
        TresCuotasArreglo[2] = 0;
        TresCuotasArreglo[3] = 0;
        TresCuotasArreglo[4] = 0;
        SeisCuotasArreglo[0] = 0;
        SeisCuotasArreglo[1] = 0;
        SeisCuotasArreglo[2] = 0;
        SeisCuotasArreglo[3] = 0;
        SeisCuotasArreglo[4] = 0;
        PrecioArreglo[0] = 0;
        PrecioArreglo[1] = 0;
        PrecioArreglo[2] = 0;
        PrecioArreglo[3] = 0;
        PrecioArreglo[4] = 0;
        EfectivoArreglo[0] = 0;
        EfectivoArreglo[1] = 0;
        EfectivoArreglo[2] = 0;
        EfectivoArreglo[3] = 0;
        EfectivoArreglo[4] = 0;
        TresCuotas = 0;
        SeisCuotas = 0;
        Efectivo20Menos = 0;
        CargarTotales();

    }
    private void LlamarShowNav(int show1)
    {
        
        
    }
    public void ShowDiv(int divNumber)
    {
        // Cambiar el número del div actual al hacer clic en el botón correspondiente
        currentDiv = divNumber;
        InicializarVariables();
    }
    [Inject]
    private DbDentistaContext DbContext { get; set; }

    protected override void OnInitialized()
    {
        ListaDePracticas = DbContext.Practicas.ToList();
        ListaDePracticasApross = DbContext.PracticasApros.ToList();
    }

    public (int,int,int) ObtenerResultados(int PrecioPasado)
    {
        Efectivo20Menos = Convert.ToInt32(PrecioPasado * 0.8);
        TresCuotas = Convert.ToInt32(((PrecioPasado * TresCuotasPorcentaje) / 100) + PrecioPasado);
        SeisCuotas = Convert.ToInt32(((PrecioPasado * SeisCuotasPorcentaje) / 100) + PrecioPasado);
        var asd = (Efectivo20Menos, TresCuotas, SeisCuotas);
        var sda = asd.GetType();
        return asd;
    }
    public void CargarTotales()
    {
        TotalDebito = PrecioArreglo[0] + PrecioArreglo[1] + PrecioArreglo[2] + PrecioArreglo[3] + PrecioArreglo[4];
        //    TotalEfectivo = EfectivoArreglo[0] + EfectivoArreglo[1] + EfectivoArreglo[2] + EfectivoArreglo[3] + EfectivoArreglo[4];
        TotalEfectivo = 0;
        foreach (int p in EfectivoArreglo)
        {
            TotalEfectivo = TotalEfectivo + p;
        }
        Total3Cuotas = TresCuotasArreglo[0] + TresCuotasArreglo[1] + TresCuotasArreglo[2] + TresCuotasArreglo[3] + TresCuotasArreglo[4];
        Total6Cuotas = SeisCuotasArreglo[0] + SeisCuotasArreglo[1] + SeisCuotasArreglo[2] + SeisCuotasArreglo[3] + SeisCuotasArreglo[4];

    }
    private void EliminarFIla1(int FilaAEliminar)
    {
        if (FilaAEliminar == 1)
        {
            PracticasArreglo[0] = "-";
            PrecioArreglo[0] = 0;
            ObtenerResultados(0);
            EfectivoArreglo[0] = Efectivo20Menos;
            TresCuotasArreglo[0] = 0;
            SeisCuotasArreglo[0]= SeisCuotas;

        }
        else if (FilaAEliminar == 2)
        {
            PracticasArreglo[1] = "-";
            PrecioArreglo[1] = 0;
            ObtenerResultados(0);
            EfectivoArreglo[1] = Efectivo20Menos;
            TresCuotasArreglo[1] = 0;
            SeisCuotasArreglo[1] = SeisCuotas;
        }
        else if (FilaAEliminar == 3)
        {  
            PracticasArreglo[2] = "-";
            PrecioArreglo[2] = 0;
            ObtenerResultados(0);
            EfectivoArreglo[2] = Efectivo20Menos;
            TresCuotasArreglo[2] = 0;
            SeisCuotasArreglo[2] = SeisCuotas;
        }
        else if (FilaAEliminar == 4)
        { 
            PracticasArreglo[3] = "-";
            PrecioArreglo[3] = 0;
            ObtenerResultados(0);
            EfectivoArreglo[3] = Efectivo20Menos;
            TresCuotasArreglo[3] = 0;
            SeisCuotasArreglo[3] = SeisCuotas;
        }
        else if (FilaAEliminar == 5)
        {
            PracticasArreglo[4] = "-";
            PrecioArreglo[4] = 0;
            ObtenerResultados(0);
            EfectivoArreglo[4] = Efectivo20Menos;
            TresCuotasArreglo[4] = 0;
            SeisCuotasArreglo[4] = SeisCuotas;
        }

        CargarTotales();
    }

    private void Quitar(int practicaId)
    {
    }

    private void Agregar(int practicaId)
    {
        if (PracticasArreglo[0] == "-")
        {

            if (currentDiv == 1)
            {
                using (DbDentistaContext db = new DbDentistaContext())
                {
                    var practica = DbContext.Practicas.Find(practicaId);

                    PracticasArreglo[0] = practica.Practica.ToString();
                    PrecioArreglo[0] = Convert.ToInt32(practica.Precio.ToString());

                    ObtenerResultados(PrecioArreglo[0]);
                    EfectivoArreglo[0] = Efectivo20Menos;
                    TresCuotasArreglo[0] = TresCuotas;
                    SeisCuotasArreglo[0] = SeisCuotas;

                }
            }
            else if (currentDiv == 2)
            {
                using (DbDentistaContext db = new DbDentistaContext())
                {
                    var practica = DbContext.PracticasApros.Find(practicaId);

                    PracticasArreglo[0] = practica.Practica.ToString();
                    PrecioArreglo[0] = Convert.ToInt32(practica.Precio.ToString());

                    ObtenerResultados(PrecioArreglo[0]);
                    EfectivoArreglo[0] = Efectivo20Menos;
                    TresCuotasArreglo[0] = TresCuotas;
                    SeisCuotasArreglo[0] = SeisCuotas;
                }
            }

        }
        else if (PracticasArreglo[1] == "-") 

            {

                if (currentDiv == 1)
                {
                    using (DbDentistaContext db = new DbDentistaContext())
                    {
                        var practica = DbContext.Practicas.Find(practicaId);

                        PracticasArreglo[1] = practica.Practica.ToString();
                        PrecioArreglo[1] = Convert.ToInt32(practica.Precio.ToString());

                        ObtenerResultados(PrecioArreglo[1]);
                        EfectivoArreglo[1] = Efectivo20Menos;
                        TresCuotasArreglo[1] = TresCuotas;
                        SeisCuotasArreglo[1] = SeisCuotas;

                    }
                }
                else if (currentDiv == 2)
                {
                    using (DbDentistaContext db = new DbDentistaContext())
                    {
                        var practica = DbContext.PracticasApros.Find(practicaId);

                        PracticasArreglo[1] = practica.Practica.ToString();
                        PrecioArreglo[1] = Convert.ToInt32(practica.Precio.ToString());

                        ObtenerResultados(PrecioArreglo[1]);
                        EfectivoArreglo[1] = Efectivo20Menos;
                        TresCuotasArreglo[1] = TresCuotas;
                        SeisCuotasArreglo[1] = SeisCuotas;
                    }
                }
            }
            else if (PracticasArreglo[2] == "-")
            {

                if (currentDiv == 1)
                {
                    using (DbDentistaContext db = new DbDentistaContext())
                    {
                        var practica = DbContext.Practicas.Find(practicaId);

                        PracticasArreglo[2] = practica.Practica.ToString();
                        PrecioArreglo[2] = Convert.ToInt32(practica.Precio.ToString());

                        ObtenerResultados(PrecioArreglo[2]);
                        EfectivoArreglo[2] = Efectivo20Menos;
                        TresCuotasArreglo[2] = TresCuotas;
                        SeisCuotasArreglo[2] = SeisCuotas;

                    }
                }
                else if (currentDiv == 2)
                {
                    using (DbDentistaContext db = new DbDentistaContext())
                    {
                        var practica = DbContext.PracticasApros.Find(practicaId);

                        PracticasArreglo[2] = practica.Practica.ToString();
                        PrecioArreglo[2] = Convert.ToInt32(practica.Precio.ToString());

                        ObtenerResultados(PrecioArreglo[2]);
                        EfectivoArreglo[2] = Efectivo20Menos;
                        TresCuotasArreglo[2] = TresCuotas;
                        SeisCuotasArreglo[2] = SeisCuotas;
                    }
                }
            }
            else if (PracticasArreglo[3] == "-")
        {

            if (currentDiv == 1)
            {
                using (DbDentistaContext db = new DbDentistaContext())
                {
                    var practica = DbContext.Practicas.Find(practicaId);

                    PracticasArreglo[3] = practica.Practica.ToString();
                    PrecioArreglo[3] = Convert.ToInt32(practica.Precio.ToString());

                    ObtenerResultados(PrecioArreglo[3]);
                    EfectivoArreglo[3] = Efectivo20Menos;
                    TresCuotasArreglo[3] = TresCuotas;
                    SeisCuotasArreglo[3] = SeisCuotas;

                }
            }
            else if (currentDiv == 2)
            {
                using (DbDentistaContext db = new DbDentistaContext())
                {
                    var practica = DbContext.PracticasApros.Find(practicaId);

                    PracticasArreglo[3] = practica.Practica.ToString();
                    PrecioArreglo[3] = Convert.ToInt32(practica.Precio.ToString());

                    ObtenerResultados(PrecioArreglo[3]);
                    EfectivoArreglo[3] = Efectivo20Menos;
                    TresCuotasArreglo[3] = TresCuotas;
                    SeisCuotasArreglo[3] = SeisCuotas;
                }
            }
        }
            else if (PracticasArreglo[4] == "-")
        {

            if (currentDiv == 1)
            {
                using (DbDentistaContext db = new DbDentistaContext())
                {
                    var practica = DbContext.Practicas.Find(practicaId);

                    PracticasArreglo[4] = practica.Practica.ToString();
                    PrecioArreglo[4] = Convert.ToInt32(practica.Precio.ToString());

                    ObtenerResultados(PrecioArreglo[4]);
                    EfectivoArreglo[4] = Efectivo20Menos;
                    TresCuotasArreglo[4] = TresCuotas;
                    SeisCuotasArreglo[4] = SeisCuotas;

                }
            }
            else if (currentDiv == 2)
            {
                using (DbDentistaContext db = new DbDentistaContext())
                {
                    var practica = DbContext.PracticasApros.Find(practicaId);

                    PracticasArreglo[4] = practica.Practica.ToString();
                    PrecioArreglo[4] = Convert.ToInt32(practica.Precio.ToString());

                    ObtenerResultados(PrecioArreglo[4]);
                    EfectivoArreglo[4] = Efectivo20Menos;
                    TresCuotasArreglo[4] = TresCuotas;
                    SeisCuotasArreglo[4] = SeisCuotas;
                }
            }
        }
        CargarTotales();

    }

        
    }

