@page "/Practicas"
@using Dent.Models
@inject Permisos Permiso
@inject AgregarPracticas AgregarPracticas
@inject EliminarPracticaMetod EliminarPracticaMethod

<div class="form-group" style="width: 100%;">
    <label for="inputText" style="width: 100%;">Practica:</label>
    <input type="text" id="inputText" style="width: 100%;" @bind="Practica" />
    <p> </p>
    <label for="inputText" style="width: 100%;">Precio:</label>
    <input type="text" id="inputText" style="width: 100%;" @bind="Precio" />
</div>
<button style="width: 100%;" class="btn btn-success" disabled="@(!CamposValidos)" @onclick="Agregar">Agregar </button>
<p> </p>
<label for="miString" style="width: 100%;">Ultima Ingresada:</label>
<input id="miString" style="width: 100%;" @bind="miString" />
<p> </p>

@* 
<button class="boton-celeste" @onclick="() => ShowDiv(1)">PARTICULAR</button>
<button class="boton-celeste" @onclick="() => ShowDiv(2)">APROSS</button>
<button class="boton-celeste" @onclick="() => ShowDiv(3)">OUM</button>
<button class="boton-celeste" @onclick="() => ShowDiv(4)">OSDE</button>
<button class="boton-celeste" @onclick="() => ShowDiv(5)">OTRAS</button>
 *@

<!-- Divs -->
<div style="display: @(currentDiv == 1 ? "block" : "none")">
    <br />
    <table class="table" id="tablepracticas">
        <thead>
            <tr class="table-dark">
                <th>ID</th>
                <th>PRACTICA</th>
                <th>PRECIO</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var practica in ListaDePracticas)
            {
                <tr class ="table-success">
                    <td>@practica.Id</td>
                    <td>@practica.Practica</td>
                    <td>@practica.Precio</td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditarPracticaAbrir(practica.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="() => EliminarPractica(practica.Id)">X</button>
                      @*   <button class="boton-amarillo"  @onclick="() => EditarPracticaAbrir(practica.Id)">Editar</button>

                        <!--  <button class="boton-rojo" @onclick="@(() => model.Show<Braian>("SEGURO DESEA ELIMINAR LA PRACTICA?"))">X</button>
                        <button @onclick="() => EliminarPractica(practica.Id)">X</button>-->
                        <button class="boton-rojo" @onclick="() => EliminarPractica(practica.Id)">X</button> *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@* 

<div style="display: @(currentDiv == 2 ? "block" : "none")">
    <h3>Practicas APROSS</h3>
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Practica</th>
                <th>Precio</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var practica in ListaDePracticasApross)
            {
                <tr>
                    <td>@practica.Id</td>
                    <td>@practica.Practica</td>
                    <td>@practica.Precio</td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditarPracticaAbrir(practica.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="() => EliminarPractica(practica.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div style="display: @(currentDiv == 3 ? "block" : "none")">
    <p>Contenido del Div 3</p>
</div>
<div style="display: @(currentDiv == 4 ? "block" : "none")">
    <p>Contenido del Div 4</p>
</div>
<div style="display: @(currentDiv == 5 ? "block" : "none")">
    <p>Contenido del Div 5</p>
</div>
 *@

 @* 

<div style="display: @(currentDiv == 2 ? "block" : "none")">
    <h3>Practicas APROSS</h3>
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Practica</th>
                <th>Precio</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var practica in ListaDePracticasApross)
            {
                <tr>
                    <td>@practica.Id</td>
                    <td>@practica.Practica</td>
                    <td>@practica.Precio</td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditarPracticaAbrir(practica.Id)">Editar</button>
                        <button class="btn btn-danger" @onclick="() => EliminarPractica(practica.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div style="display: @(currentDiv == 3 ? "block" : "none")">
    <p>Contenido del Div 3</p>
</div>
<div style="display: @(currentDiv == 4 ? "block" : "none")">
    <p>Contenido del Div 4</p>
</div>
<div style="display: @(currentDiv == 5 ? "block" : "none")">
    <p>Contenido del Div 5</p>
</div>
 *@

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modaledit" >
 EDITAR
</button>

<!-- Modal -->
<div class="modal fade" id="modaledit" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="inputText">Practica:</label>
                    <input type="text" id="inputText" @bind="Practica" />
                </div>
                <div class="form-group">
                    <label for="inputText">Precio:</label>
                    <input type="text" id="inputText" @bind="Precio" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Understood</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" style="display: @(mostrarModalEdit ? "block" : "none")">
    <div class="modal-content">
     <span class="btn btn-danger" @onclick="CerrarModalEdit">CERRAR</span>
        <h3>EDITAR</h3>
        <div class="form-group">
            <label for="inputText">Id:</label>
            <input type="number" id="inputText" @bind="IdEdit" readonly />
        </div>
        <div class="form-group">
            <label for="inputText">Practica:</label>
            <input type="text" id="inputText" @bind="Practica" />
        </div>
        <div class="form-group">
            <label for="inputText">Precio:</label>
            <input type="text" id="inputText" @bind="Precio" />
            <button style="width: 100%;" class="btn btn-warning" disabled="@(!CamposValidos)" @onclick="() => EditarPractica(IdEdit)">Editar</button>
        </div>
    </div>
</div>

@code {
    private bool CamposValidos => Precio != 0 && !string.IsNullOrEmpty(Practica);
    private bool mostrarModalEdit = false;
    private List<Practica1> ListaDePracticas = new List<Practica1>();
    private List<PracticasApro> ListaDePracticasApross = new List<PracticasApro>();
    private List<Paciente> ListaDePacientes = new List<Paciente>();
    private int currentDiv = 1;
    private void ShowDiv(int divNumber)
    {
        // Cambiar el número del div actual al hacer clic en el botón correspondiente
        currentDiv = divNumber;
    }
    [Inject]
    private DbDentistaContext DbContext { get; set; }

    protected override void OnInitialized()
    {
        ListaDePracticas = DbContext.Practicas.ToList();
        ListaDePracticasApross = DbContext.PracticasApros.ToList();

    }
    public string Practica = "";
    public int Precio = 0;
    public int IdEdit = 0;
    public string miString = "";

    [Inject]
    private AgregarPracticas agregarPracticas { get; set; }
    [Inject]
    private EliminarPracticaMetod Eliminarla { get; set; }
    private void EditarPracticaAbrir(int practicaId)
    {
        AbrirModalEdit();

        if (currentDiv == 1)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                var practica = DbContext.Practicas.Find(practicaId);

                IdEdit = practica.Id;
                Practica = practica.Practica;
                Precio = practica.Precio;
            }
        }
        else if (currentDiv == 2)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                var practica = DbContext.PracticasApros.Find(practicaId);

                IdEdit = practica.Id;
                Practica = practica.Practica;
                Precio = practica.Precio;
            }
        }
    }
    public void EditarPractica(int practicaId)
    {

        if (currentDiv == 1)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                var practica = DbContext.Practicas.Find(practicaId);
                if (practica != null)
                {
                    //Actualizar los campos necesarios
                    if (Practica == "")
                    { practica.Precio = Precio; }
                    else
                    {
                        practica.Practica = Practica;
                        practica.Precio = Precio;
                    }


                    db.SaveChanges();
                }
            }
            CerrarModalEdit();

        }
        else if (currentDiv == 2)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {

                var practica = DbContext.PracticasApros.Find(practicaId);
                if (practica != null)
                {
                    //Actualizar los campos necesarios
                    if (Practica == "")
                    { practica.Precio = Precio; }
                    else
                    {
                        practica.Practica = Practica;
                        practica.Precio = Precio;
                    }


                    db.SaveChanges();
                }
            }
            CerrarModalEdit();
        }

        /////////////////////////////////////////////

    }
    public void EliminarPractica(int practicaId)
    {
      //  Eliminarla.Eliminarla(practicaId);
        var practica = DbContext.Practicas.Find(practicaId);
        if (practica != null)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                db.Practicas.Remove(practica);
                db.SaveChanges();
            }
        }

        ActualizaTabla();
            
    }
    private void Agregar()
    {
        AgregarPracticas.CargarPractica(Practica,Precio);
        // Al final del método donde realizas cambios y antes de volver a cargar los datos
        ActualizaTabla();
        miString = Practica;
        Practica = "";
        Precio = 0;

        //agregarPracticas.CargarPractica();
        Console.WriteLine($"Texto ingresado: {Practica} agregada");
    }
  
    private void ActualizaTabla()
    {
        ListaDePracticas = DbContext.Practicas.ToList();
        ListaDePracticasApross = DbContext.PracticasApros.ToList();
        StateHasChanged();

    }

    public void AbrirModalEdit()
    {
        mostrarModalEdit = true;
    }

    // Método para cerrar el modal
    public void CerrarModalEdit()
    {
        mostrarModalEdit = false;
    }
}