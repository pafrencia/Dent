@page "/Practicas"
@using Dent.Models


<style>
    /* Definición de la clase CSS para el botón */
    .boton-celeste {
        background-color: #5bc0de; /* Color de fondo celeste por defecto */
        color: #000000; /* Color de texto blanco por defecto */
        border: 1px solid #5bc0de; /* Borde de 1px con color celeste por defecto */
        border-radius: 5px; /* Bordes redondeados por defecto */
        padding: 8px 16px; /* Espaciado interno para el contenido del botón por defecto */
        cursor: pointer; /* Cambia el cursor al pasar sobre el botón */
        font-weight: bold; /* Texto en negrita */
    }

        /* Cambio de color al pasar el cursor sobre el botón (efecto hover) */
        .boton-celeste:hover {
            background-color: #0073e6; /* Cambia el color de fondo a azul al pasar el cursor */
            border-color: #0073e6; /* Cambia el color del borde a azul al pasar el cursor */
        }

        /* Cambio de color cuando el botón está presionado (efecto active) */
        .boton-celeste:active {
            background-color: #000000; /* Cambia el color de fondo a negro cuando está presionado */
            border-color: #000000; /* Cambia el color del borde a negro cuando está presionado */
        }
</style>

<h3>Practicas</h3>

<div class="form-group">
    <label for="inputText">Practica:</label>
    <input type="text" id="inputText" @bind="Practica" />
</div>
<div class="form-group">
    <label for="inputText">Precio:</label>
    <input type="text" id="inputText" @bind="Precio" />


</div>

<button @onclick="Agregar">Agregar </button>

<label for="miString">Ultima Ingresada:</label>
<input id="miString" @bind="miString" />
<p> </p>


<button class="boton-celeste" @onclick="() => ShowDiv(1)">PARTICULAR</button>
<button class="boton-celeste" @onclick="() => ShowDiv(2)">APROSS</button>
<button class="boton-celeste" @onclick="() => ShowDiv(3)">OUM</button>
<button class="boton-celeste" @onclick="() => ShowDiv(4)">OSDE</button>
<button class="boton-celeste" @onclick="() => ShowDiv(5)">OTRAS</button>


<!-- Divs -->
<div style="display: @(currentDiv == 1 ? "block" : "none")">
    <h3>Practicas PARTICULAR</h3>
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Practica</th>
                <th>Precio</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var practica in ListaDePracticas)
            {
                <tr>
                    <td>@practica.Id</td>
                    <td>@practica.Practica</td>
                    <td>@practica.Precio</td>
                    <td>
                        <button @onclick="() => EditarPracticaAbrir(practica.Id)">Editar</button>
                        <button @onclick="() => EliminarPractica(practica.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<div style="display: @(currentDiv == 2 ? "block" : "none")">
    <h3>Practicas APROSS</h3>
    <br />
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Practica</th>
                <th>Precio</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var practica in ListaDePracticasApross)
            {
                <tr>
                    <td>@practica.Id</td>
                    <td>@practica.Practica</td>
                    <td>@practica.Precio</td>
                    <td>
                        <button @onclick="() => EditarPracticaAbrir(practica.Id)">Editar</button>
                        <button @onclick="() => EliminarPractica(practica.Id)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div style="display: @(currentDiv == 3 ? "block" : "none")">
    <p>Contenido del Div 3</p>
</div>
<div style="display: @(currentDiv == 4 ? "block" : "none")">
    <p>Contenido del Div 4</p>
</div>
<div style="display: @(currentDiv == 5 ? "block" : "none")">
    <p>Contenido del Div 5</p>
</div>


<div class="modal" style="display: @(mostrarModalEdit ? "block" : "none")">
    <div class="modal-content">
        <span class="cerrar" @onclick="CerrarModalEdit">&times;</span>
        <h3>EDITAR</h3>
        <div class="form-group">
            <label for="inputText">Id:</label>
            <input type="number" id="inputText" @bind="IdEdit" />
        </div>
        <div class="form-group">
            <label for="inputText">Practica:</label>
            <input type="text" id="inputText" @bind="Practica" />
        </div>
        <div class="form-group">
            <label for="inputText">Precio:</label>
            <input type="text" id="inputText" @bind="Precio" />
            <button @onclick="() => EditarPractica(IdEdit)">Editar</button>

        </div>
    </div>
</div>

@code {
    private bool mostrarModalEdit = false;
    private List<Practica1> ListaDePracticas = new List<Practica1>();
    private List<PracticasApro> ListaDePracticasApross = new List<PracticasApro>();
    private int currentDiv = 1;

    private void ShowDiv(int divNumber)
    {
        // Cambiar el número del div actual al hacer clic en el botón correspondiente
        currentDiv = divNumber;
    }
    [Inject]
    private DbDentistaContext DbContext { get; set; }

    protected override void OnInitialized()
    {
        ListaDePracticas = DbContext.Practicas.ToList();
        ListaDePracticasApross = DbContext.PracticasApros.ToList();
    }
    public string Practica = "";
    public int Precio = 0;
    public int IdEdit = 0;
    public string miString = "";

    [Inject]
    private AgregarPracticas agregarPracticas { get; set; }

    private void EditarPracticaAbrir(int practicaId)
    {
        AbrirModalEdit();

        if (currentDiv == 1)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                var practica = DbContext.Practicas.Find(practicaId);

                IdEdit = practica.Id;
                Practica = practica.Practica;
                Precio = practica.Precio;
            }
        }
        else if (currentDiv == 2)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                var practica = DbContext.PracticasApros.Find(practicaId);

                IdEdit = practica.Id;
                Practica = practica.Practica;
                Precio = practica.Precio;
            }
        }
    }
    public void EditarPractica(int practicaId)
    {

        if (currentDiv == 1)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {
                var practica = DbContext.Practicas.Find(practicaId);
                if (practica != null)
                {
                    //Actualizar los campos necesarios
                    if (Practica == "")
                    { practica.Precio = Precio; }
                    else
                    {
                        practica.Practica = Practica;
                        practica.Precio = Precio;
                    }


                    db.SaveChanges();
                }
            }
            CerrarModalEdit();

        }
        else if (currentDiv == 2)
        {
            using (DbDentistaContext db = new DbDentistaContext())
            {

                var practica = DbContext.PracticasApros.Find(practicaId);
                if (practica != null)
                {
                    //Actualizar los campos necesarios
                    if (Practica == "")
                    { practica.Precio = Precio; }
                    else
                    {
                        practica.Practica = Practica;
                        practica.Precio = Precio;
                    }


                    db.SaveChanges();
                }
            }
            CerrarModalEdit();
        }

        /////////////////////////////////////////////

    }
    private void EliminarPractica(int practicaId)
    {

        if (currentDiv == 1)
        {
            var practica = DbContext.Practicas.Find(practicaId);
            if (practica != null)
            {
                using (DbDentistaContext db = new DbDentistaContext())
                {
                    db.Practicas.Remove(practica);
                    db.SaveChanges();
                }
                ActualizaTabla();
            }
        }
        else if (currentDiv == 2)
        {
            var practica = DbContext.PracticasApros.Find(practicaId);
            if (practica != null)
            {
                using (DbDentistaContext db = new DbDentistaContext())
                {
                    db.PracticasApros.Remove(practica);
                    db.SaveChanges();
                }
                ActualizaTabla();
            }
            
        }
    }
    private void Agregar()
    {
        if (currentDiv == 1)
        {
            var prueba = new Practica1();
            prueba.Practica = Practica;
            prueba.Precio = Precio;
            using (DbDentistaContext db = new DbDentistaContext())
            {
                db.Practicas.Add(prueba);
                db.SaveChanges();
            }
        }
        else if (currentDiv == 2)
        {
            var prueba = new PracticasApro();
            prueba.Practica = Practica;
            prueba.Precio = Precio;
            using (DbDentistaContext db = new DbDentistaContext())
            {
                db.PracticasApros.Add(prueba);
                db.SaveChanges();
            }
        }
        // Al final del método donde realizas cambios y antes de volver a cargar los datos
        ActualizaTabla();
        miString = Practica;
        Practica = "";
        Precio = 0;

        //agregarPracticas.CargarPractica();
        Console.WriteLine($"Texto ingresado: {Practica} agregada");
    }
    private void ActualizaTabla()
    {
        ListaDePracticas = DbContext.Practicas.ToList();
        ListaDePracticasApross = DbContext.PracticasApros.ToList();
        StateHasChanged();

    }

    public void AbrirModalEdit()
    {
        mostrarModalEdit = true;
    }

    // Método para cerrar el modal
    public void CerrarModalEdit()
    {
        mostrarModalEdit = false;
    }
}